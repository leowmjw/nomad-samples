admin: 
  port: 9990

namers:
# Consul service discovery
- kind: io.l5d.consul
  # prefix: io.l5d.consul
  host: docker.for.mac.localhost # default: localhost, use consul if on container
  port: 8500
  includeTag: false # whether to read Consul tag from the path
  useHealthCheck: true
  # token: 
  setHost: true # ${serviceName}.service.${datacenter}.consul
  consistencyMode: stale
  failFast: true
  preferServiceAddress: true

routers:
- label: /http-consul-out
  protocol: http
  service:
    responseClassifier:
      kind: io.l5d.http.retryableIdempotent5XX
    retries:
      budget:
        percentCanRetry: 0.1 # For every 10 non-retry calls, allow 1 retry
  identifier:
    kind: io.l5d.header.token
    # Defaults to `host: audit`
    # header: l5d-name #  curl -H "l5d-name: audit" localhost:4140/
  # Dtab
  dtab: |
    /svc => /#/io.l5d.consul/.local;
    # /host => /srv;
    # When include tag is true,  it takes three path components: datacenter, tag, and serviceName
    # /http/1.1/* => /#/io.l5d.consul/dc1/dev;
    # /svc => /#/io.l5d.consul/dc1/dev;
  servers:
  - port: 4140
    ip: 0.0.0.0

  client:
   requeueBudget:
    percentCanRetry: 5.0
   loadBalancer:
    kind: ewma
    maxEffort: 10
    decayTimeMs: 15000

# - label: /http-consul-in
#   protocol: http
#   servers:
#     - port: 4141
#       ip: 0.0.0.0
#       tls:
#         # certPath: /etc/linkerd/server.crt
#         # keyPath: /etc/linkerd/server.crt
#   # auth.linkerd -> auth.service.consul
#   dtab: |
#     /consulSvc  => /#/io.l5d.consul/.local;
#     /host => /$/io.buoyant.http.subdomainOfPfx/linkerd/consulSvc;
#     /svc => /host;
#   identifier:
#     kind: io.l5d.header.token
#   interpreter:
#     kind: default
#     transformers:
#       - kind: io.l5d.localhost
telemetry:
- kind: io.l5d.zipkin
  host: docker.for.mac.localhost # zipkin
  port: 9410
  # sampleRate: 1.0

usage:
  orgId: linkerd-examples-consul